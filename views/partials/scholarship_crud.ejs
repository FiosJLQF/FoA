<div class="col-9 bodylayout1col2-datamgmt" id="scholarshipsearchresultscolumn">
    <span class="bodylayout1col2title">
      <label class="data-mgmt-col-title" id="scholarshipInstructions"></label></span><br>
    <hr class="bodycol2break">
    <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;<span style="color: red;">*</span> indicates a required entry</label><br><br>

    <% if ( statusMessage !== '' ) { %>
      <div>
        <label id="statusMessage" class="form-status"><%= statusMessage %></label>
      </div>
      <% } %>
  
    <!-- The data entry form container -->
    <form action="/switchboard/scholarshipadd" method="POST" id="scholarshipData">

      <!-- If the form context is "Manage Scholarship" then provide the scholarshipID for reference -->
      <input type="hidden" id="sponsorID" name="sponsorID">
      <input type="hidden" id="scholarshipIDToUpdate" name="scholarshipIDToUpdate">

      <!-- Scholarship Status -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipStatus" class="data-mgmt">Ready-To-Post Status:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipStatus" class="data-mgmt-required">*</label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="scholarshipStatus" name="scholarshipStatus" class="data-mgmt-single-third"></select><br>
            <span class="data-mgmt-error" id="scholarshipStatusErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Scholarship Name -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipName" class="data-mgmt">Scholarship Name:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipName" class="data-mgmt-required">*</label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="scholarshipName" name="scholarshipName" class="data-mgmt-text"><br>
            <span class="data-mgmt-error" id="scholarshipNameErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Scholarship Description -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipDescription" class="data-mgmt">Description:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipName" class="data-mgmt-required">*</label>
          </div>
          <div class="col-8 data-mgmt-value">
            <textarea id="scholarshipDescription" name="scholarshipDescription" class="data-mgmt"></textarea><br>
            <span class="data-mgmt-error" id="scholarshipDescriptionErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Scholarship Link -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipLink" class="data-mgmt">Link to Scholarship:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipLink" class="data-mgmt-required">*</label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="scholarshipLink" name="scholarshipLink" class="data-mgmt-text"><br>
            <span class="data-mgmt-error" id="scholarshipLinkErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Scholarship Award -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipAward" class="data-mgmt">Award:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipAward" class="data-mgmt-required">*</label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="scholarshipAward" name="scholarshipAward" class="data-mgmt-text-half"><br>
            <span class="data-mgmt-error" id="scholarshipAwardErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Scholarship Contact First Name -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipContactFName" class="data-mgmt">Contact First Name:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipContactFName" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="scholarshipContactFName" name="scholarshipContactFName" class="data-mgmt-text-third"><br>
            <span class="data-mgmt-error" id="scholarshipContactFNameErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Scholarship Contact Last Name -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipContactLName" class="data-mgmt">Contact Last Name:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipContactLName" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="scholarshipContactLName" name="scholarshipContactLName" class="data-mgmt-text-third"><br>
            <span class="data-mgmt-error" id="scholarshipContactLNameErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Scholarship Contact Email -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipContactEmail" class="data-mgmt">Contact Email:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipContactEmail" class="data-mgmt-required">*</label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="scholarshipContactEmail" name="scholarshipContactEmail" class="data-mgmt-text-half"><br>
            <span class="data-mgmt-error" id="scholarshipContactEmailErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Scholarship Contact Telephone -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipContactTelephone" class="data-mgmt">Contact Telephone:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipContactTelephone" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="scholarshipContactTelephone" name="scholarshipContactTelephone" class="data-mgmt-text-half">
            <span class="data-mgmt-error" id="scholarshipContactTelephoneErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Administrative Notes -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="notesAdmin" class="data-mgmt">Notes (Administrative):</label><br>
            <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;(Not for use in Search.)</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="notesAdmin" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <textarea id="notesAdmin" name="notesAdmin" class="data-mgmt"></textarea><br>
            <span class="data-mgmt-error" id="notesAdminErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Eligibility Requirements (Primary) -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipEligReqsPrimary" class="data-mgmt">Eligibility Requirements:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipEligReqsPrimary" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <textarea id="scholarshipEligReqsPrimary" name="scholarshipEligReqsPrimary" class="data-mgmt"></textarea><br>
            <span class="data-mgmt-error" id="scholarshipEligReqsPrimaryErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Eligibility Requirements (Other) -->
      <!--  Removed by KK request on 5/12/21
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipEligReqsOther" class="data-mgmt">Other Requirements:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipEligReqsOther" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <textarea id="scholarshipEligReqsOther" name="scholarshipEligReqsOther" class="data-mgmt"></textarea><br>
            <span class="data-mgmt-error" id="scholarshipEligReqsOtherErrors"></span>
          </div>
        </div>
      </div><br>
      -->

      <!-- Recurrence Frequency -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipRecurrence" class="data-mgmt">Recurrence Frequency:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipRecurrence" class="data-mgmt-required">*</label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="scholarshipRecurrence" name="scholarshipRecurrence" class="data-mgmt-single-third"></select><br>
            <span class="data-mgmt-error" id="scholarshipRecurrenceErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Application List Date -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipApplListDate" class="data-mgmt">Application List Date:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipApplListDate" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="date" id="scholarshipApplListDate" name="scholarshipApplListDate" class="data-mgmt-text-third">
            <span class="data-mgmt-error" id="scholarshipApplListDateErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Application Start Date -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipApplStartDate" class="data-mgmt">Application Start Date:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipApplStartDate" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="date" id="scholarshipApplStartDate" name="scholarshipApplStartDate" class="data-mgmt-text-third">
            <span class="data-mgmt-error" id="scholarshipApplStartDateErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Application End Date -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="scholarshipApplEndDate" class="data-mgmt">Application End Date:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="scholarshipApplEndDate" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="date" id="scholarshipApplEndDate" name="scholarshipApplEndDate" class="data-mgmt-text-third">
            <span class="data-mgmt-error" id="scholarshipApplEndDateErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Criteria - Field of Study -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaFieldOfStudy" class="data-mgmt">Field(s) of Study:</label><br>
            <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;(Press [ctrl] to select multiples.)</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaFieldOfStudy" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="criteriaFieldOfStudy" name="criteriaFieldOfStudy" class="data-mgmt-multiple" multiple></select><br>
            <span class="data-mgmt-error" id="criteriaFieldOfStudyErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Age (Minimum) -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaMinimumAge" class="data-mgmt">Minimum Age:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaMinimumAge" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="criteriaMinimumAge" name="criteriaMinimumAge" class="data-mgmt-text-third"><br>
            <span class="data-mgmt-error" id="criteriaMinimumAgeErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Age (Maximum) -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaMaximumAge" class="data-mgmt">Maximum Age:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaMaximumAge" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="criteriaMaximumAge" name="criteriaMaximumAge" class="data-mgmt-text-third"><br>
            <span class="data-mgmt-error" id="criteriaMaximumAgeErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Criteria - Citizenship -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaCitizenship" class="data-mgmt">Citizenship(s):</label><br>
            <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;(Press [ctrl] to select multiples.)</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaCitizenship" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="criteriaCitizenship" name="criteriaCitizenship" class="data-mgmt-multiple" multiple></select><br>
            <span class="data-mgmt-error" id="criteriaCitizenshipErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Criteria - Year of Need -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaYearOfNeed" class="data-mgmt">Year(s) of Need:</label><br>
            <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;(Press [ctrl] to select multiples.)</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaYearOfNeed" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="criteriaYearOfNeed" name="criteriaYearOfNeed" class="data-mgmt-multiple" multiple></select><br>
            <span class="data-mgmt-error" id="criteriaYearOfNeedErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Criteria - Female Applicants Only -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaFemaleApplicantsOnly" class="data-mgmt">Female Applicants Only:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaFemaleApplicantsOnly" class="data-mgmt-required">*</label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="criteriaFemaleApplicantsOnly" name="criteriaFemaleApplicantsOnly" class="data-mgmt-single-third"></select><br>
            <span class="data-mgmt-error" id="criteriaFemaleApplicantsOnlyErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Criteria - Enrollment Status -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaEnrollmentStatus" class="data-mgmt">Enrollment Status(es):</label><br>
            <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;(Press [ctrl] to select multiples.)</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaEnrollmentStatus" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="criteriaEnrollmentStatus" name="criteriaEnrollmentStatus" class="data-mgmt-multiple" multiple></select><br>
            <span class="data-mgmt-error" id="criteriaEnrollmentStatusErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- GPA (Minimum) -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaMinimumGPA" class="data-mgmt">Minimum GPA:</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaMinimumGPA" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <input type="text" id="criteriaMinimumGPA" name="criteriaMinimumGPA" class="data-mgmt-text-third"><br>
            <span class="data-mgmt-error" id="criteriaMinimumGPAErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Criteria - Military Service -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaMilitaryService" class="data-mgmt">U.S. Military Service:</label><br>
            <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;(Press [ctrl] to select multiples.)</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaMilitaryService" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="criteriaMilitaryService" name="criteriaMilitaryService" class="data-mgmt-multiple" multiple></select><br>
            <span class="data-mgmt-error" id="criteriaMilitaryServiceErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Criteria - FAA Pilot Certificate -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaFAAPilotCertificate" class="data-mgmt">FAA Pilot Certificate(s):</label><br>
            <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;(Press [ctrl] to select multiples.)</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaFAAPilotCertificate" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="criteriaFAAPilotCertificate" name="criteriaFAAPilotCertificate" class="data-mgmt-multiple" multiple></select><br>
            <span class="data-mgmt-error" id="criteriaFAAPilotCertificateErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Criteria - FAA Pilot Rating -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaFAAPilotRating" class="data-mgmt">FAA Pilot Rating(s):</label><br>
            <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;(Press [ctrl] to select multiples.)</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaFAAPilotRating" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="criteriaFAAPilotRating" name="criteriaFAAPilotRating" class="data-mgmt-multiple" multiple></select><br>
            <span class="data-mgmt-error" id="criteriaFAAPilotRatingErrors"></span>
          </div>
        </div>
      </div><br>

      <!-- Criteria - FAA Mechanic Certificate -->
      <div class="flexcontainer-datamgmt">
        <div class="row">
          <div class="col-3 data-mgmt-label">
            <label for="criteriaFAAMechanicCertificate" class="data-mgmt">FAA Mechanic Certificate(s):</label><br>
            <label class="data-mgmt-instruction">&nbsp;&nbsp;&nbsp;(Press [ctrl] to select multiples.)</label>
          </div>
          <div class="col-1 data-mgmt-required">
            <label for="criteriaFAAMechanicCertificate" class="data-mgmt-required"></label>
          </div>
          <div class="col-8 data-mgmt-value">
            <select id="criteriaFAAMechanicCertificate" name="criteriaFAAMechanicCertificate" class="data-mgmt-multiple" multiple></select><br>
            <span class="data-mgmt-error" id="criteriaFAAMechanicCertificateErrors"></span>
          </div>
        </div>
      </div><br>

    </form> <!-- End data mgmt form -->

    <!-- CRUD Actions -->
    <div><br>
      <% if ( actionRequested === 'addscholarship' ) { %>
        <button class="data-mgmt" form="scholarshipData" onclick="return validateData();">Add Scholarship</button>
      <% } %>
      <% if ( scholarshipID !== '' && userCanDeleteScholarship ) { %>
        <form form action="/switchboard/scholarshipdelete?_method=DELETE" method="POST" id="scholarshipDataDelete">
          <input type="hidden" id="scholarshipIDToDelete" name="scholarshipIDToDelete" value="<%= scholarshipID %>">
          <input type="hidden" id="sponsorIDOfScholarship" name="sponsorIDOfScholarship" value="<%= sponsorID %>">
        </form>
      <% } %>
      <% if ( scholarshipID !== '' && userCanUpdateScholarship ) { %>
        <button class="data-mgmt" form="scholarshipData" onclick="return validateData();">Save Changes</button>&nbsp;&nbsp;&nbsp;&nbsp;
      <% } %>
      <% if ( scholarshipID !== '' && userCanDeleteScholarship ) { %>
        <button class="data-mgmt" form="scholarshipDataDelete" onclick=" return deleteScholarship();">Delete This Scholarship</button>
      <% } %>
    </div><br><br>

<script>

  /////////////////////////////////////////////////////////////////////////////////////////////
  // Load the DDLs options lists
  /////////////////////////////////////////////////////////////////////////////////////////////

  var scholarshipStatusRows = <%- JSON.stringify(scholarshipStatusCategories.rows) %>;
  loadSelectOptionsList("scholarshipStatus", "(Not Selected)", 0, scholarshipStatusRows);

  var scholarshipRecurrenceRows = <%- JSON.stringify(scholarshipRecurrenceCategories.rows) %>;
  loadSelectOptionsList("scholarshipRecurrence", "(Not Selected)", 0, scholarshipRecurrenceRows);

  var criteriaFieldOfStudyRows = <%- JSON.stringify(criteriaFieldOfStudyCategories.rows) %>;
  loadSelectOptionsList("criteriaFieldOfStudy", "(Not Selected)", 0, criteriaFieldOfStudyRows);

  var criteriaCitizenshipRows = <%- JSON.stringify(criteriaCitizenshipCategories.rows) %>;
  loadSelectOptionsList("criteriaCitizenship", "(Not Selected)", 0, criteriaCitizenshipRows);

  var criteriaYearOfNeedRows = <%- JSON.stringify(criteriaYearOfNeedCategories.rows) %>;
  loadSelectOptionsList("criteriaYearOfNeed", "(Not Selected)", 0, criteriaYearOfNeedRows);

  var criteriaFemaleApplicantsOnlyRows = <%- JSON.stringify(criteriaGenderCategories.rows) %>;
  loadSelectOptionsList("criteriaFemaleApplicantsOnly", "(Not Selected)", 0, criteriaFemaleApplicantsOnlyRows);

  var criteriaEnrollmentStatusRows = <%- JSON.stringify(criteriaEnrollmentStatusCategories.rows) %>;
  loadSelectOptionsList("criteriaEnrollmentStatus", "(Not Selected)", 0, criteriaEnrollmentStatusRows);

  var criteriaMilitaryServiceRows = <%- JSON.stringify(criteriaMilitaryServiceCategories.rows) %>;
  loadSelectOptionsList("criteriaMilitaryService", "(Not Selected)", 0, criteriaMilitaryServiceRows);

  var criteriaFAAPilotCertificateRows = <%- JSON.stringify(criteriaFAAPilotCertificateCategories.rows) %>;
  loadSelectOptionsList("criteriaFAAPilotCertificate", "(Not Selected)", 0, criteriaFAAPilotCertificateRows);

  var criteriaFAAPilotRatingRows = <%- JSON.stringify(criteriaFAAPilotRatingCategories.rows) %>;
  loadSelectOptionsList("criteriaFAAPilotRating", "(Not Selected)", 0, criteriaFAAPilotRatingRows);

  var criteriaFAAMechanicCertificateRows = <%- JSON.stringify(criteriaFAAMechanicCertificateCategories.rows) %>;
  loadSelectOptionsList("criteriaFAAMechanicCertificate", "(Not Selected)", 0, criteriaFAAMechanicCertificateRows);

  /////////////////////////////////////////////////////////////////////////////////////////////
  // Customize the page based on the context ("Add Scholarship" v. "Manage Scholarship")
  /////////////////////////////////////////////////////////////////////////////////////////////
  <% if ( actionRequested === 'addscholarship' ) { %>  // "Add Scholarship"

    // Set the browser tab name (i.e., title)
    document.title = "Future of Aviation - Add Scholarship";
    // Set the page title
    document.getElementById("pageTitle").innerText = "Switchboard - Add Scholarship";
    // Set the instructions
    document.getElementById('scholarshipInstructions').innerText = "Add the information for the new Scholarship below, and click 'Add Scholarship'.";
    // Set the Sponsor ID for this new Scholarship
    document.getElementById('sponsorID').value = "<%= sponsorID %>";

  <% } else if ( scholarshipID !== '' ) { %>  // "Read/Update/Delete Scholarship"

    // Set the browser tab name (i.e., title)
    document.title = "Future of Aviation - Manage Scholarship";
    // Set the page title
    document.getElementById("pageTitle").innerText = "Switchboard - Manage Scholarship";
    // Set the instructions
    document.getElementById('scholarshipInstructions').innerText = "Edit the entries below, and click 'Save Changes'.";
    // Set the form submittal configuration
    document.getElementById('scholarshipData').action = "/switchboard/scholarshipupdate?_method=PUT";
    document.getElementById('scholarshipData').method = "POST";
    // Set the current values for the Scholarship data elements
    document.getElementById('scholarshipIDToUpdate').value = "<%- scholarshipDetails[0].ScholarshipID %>";
    document.getElementById('sponsorID').value = "<%- sponsorID %>";
//    document.getElementById('scholarshipStatus').value = "<%= scholarshipDetails[0].ScholarshipStatus %>";
    // Select Scholarship Status
    var scholarshipStatus = "<%- scholarshipDetails[0].ScholarshipStatus %>";
    var scholarshipStatusArrTrimmed = scholarshipStatus.split('|').slice(1, -1);
    var scholarshipStatusSelectObject = document.getElementById('scholarshipStatus');
    if ( scholarshipStatusArrTrimmed.length !== 0 ) {
      scholarshipStatusSelectObject.options[0].selected = '';  // Remove the default 'Not Selected' option
      scholarshipStatusArrTrimmed.forEach( function(scholarshipStatus) {
        for ( i=0; i < scholarshipStatusSelectObject.length; i++ ) {
          if ( scholarshipStatusSelectObject.options[i].value === scholarshipStatus ) {
            scholarshipStatusSelectObject.options[i].selected = 'selected';
          }
        }
      });
    };
    document.getElementById('scholarshipName').value = "<%= scholarshipDetails[0].ScholarshipName %>";
    document.getElementById('scholarshipDescription').innerHTML = `<%= scholarshipDetails[0].ScholarshipDescription %>`;
    document.getElementById('scholarshipLink').value = `<%- scholarshipDetails[0].ScholarshipLink %>`;
    document.getElementById('scholarshipAward').value = "<%= scholarshipDetails[0].ScholarshipAward %>";
    document.getElementById('scholarshipContactFName').value = "<%= scholarshipDetails[0].ScholarshipContactFName %>";
    document.getElementById('scholarshipContactLName').value = "<%= scholarshipDetails[0].ScholarshipContactLName %>";
    document.getElementById('scholarshipContactEmail').value = "<%= scholarshipDetails[0].ScholarshipContactEmail %>";
    document.getElementById('scholarshipContactTelephone').value = "<%= scholarshipDetails[0].ScholarshipContactTelephone %>";
    document.getElementById('notesAdmin').innerHTML = `<%= scholarshipDetails[0].Notes_Admin %>`;
    document.getElementById('scholarshipEligReqsPrimary').innerHTML = `<%= scholarshipDetails[0].ScholarshipEligibilityReqs %>`;
//    document.getElementById('scholarshipEligReqsOther').value = "<%= scholarshipDetails[0].ScholarshipEligibilityReqsOther %>";
    document.getElementById('scholarshipRecurrence').value = "<%= scholarshipDetails[0].ScholarshipRecurrence %>";
    // Select Recurrence Frequency
    var scholarshipRecurrence = "<%- scholarshipDetails[0].ScholarshipRecurrence %>";
    var scholarshipRecurrenceArrTrimmed = scholarshipRecurrence.split('|').slice(1, -1);
    var scholarshipRecurrenceSelectObject = document.getElementById('scholarshipRecurrence');
    if ( scholarshipRecurrenceArrTrimmed.length !== 0 ) {
      scholarshipRecurrenceSelectObject.options[0].selected = '';  // Remove the default 'Not Selected' option
      scholarshipRecurrenceArrTrimmed.forEach( function(scholarshipRecurrence) {
        for ( i=0; i < scholarshipRecurrenceSelectObject.length; i++ ) {
          if ( scholarshipRecurrenceSelectObject.options[i].value === scholarshipRecurrence ) {
            scholarshipRecurrenceSelectObject.options[i].selected = 'selected';
          }
        }
      });
    };
    document.getElementById('scholarshipApplListDate').value = "<%= scholarshipDetails[0].ScholarshipApplListDate %>";
    document.getElementById('scholarshipApplStartDate').value = "<%= scholarshipDetails[0].ScholarshipApplStartDate %>";
    document.getElementById('scholarshipApplEndDate').value = "<%= scholarshipDetails[0].ScholarshipApplEndDate %>";
    // Select Field of Study Criteria
    var criteriaFieldOfStudy = "<%- scholarshipDetails[0].Criteria_FieldOfStudy %>";
    var criteriaFieldOfStudyArrTrimmed = criteriaFieldOfStudy.split('|').slice(1, -1);
    var criteriaFieldOfStudySelectObject = document.getElementById('criteriaFieldOfStudy');
    if ( criteriaFieldOfStudyArrTrimmed.length !== 0 ) {
      criteriaFieldOfStudySelectObject.options[0].selected = '';  // Remove the default 'Not Selected' option
      criteriaFieldOfStudyArrTrimmed.forEach( function(criteriaFieldOfStudy) {
        for ( i=0; i < criteriaFieldOfStudySelectObject.length; i++ ) {
          if ( criteriaFieldOfStudySelectObject.options[i].value === criteriaFieldOfStudy ) {
            criteriaFieldOfStudySelectObject.options[i].selected = 'selected';
          }
        }
      });
    };
    document.getElementById('criteriaMinimumAge').value = "<%= scholarshipDetails[0].Criteria_AgeMinimum %>";
    document.getElementById('criteriaMaximumAge').value = "<%= scholarshipDetails[0].Criteria_AgeMaximum %>";
    // Select Citizenship Criteria
    var criteriaCitizenship = "<%- scholarshipDetails[0].Criteria_Citizenship %>";
    var criteriaCitizenshipArrTrimmed = criteriaCitizenship.split('|').slice(1, -1);
    var criteriaCitizenshipSelectObject = document.getElementById('criteriaCitizenship');
    if ( criteriaCitizenshipArrTrimmed.length !== 0 ) {
      criteriaCitizenshipSelectObject.options[0].selected = '';  // Remove the default 'Not Selected' option
      criteriaCitizenshipArrTrimmed.forEach( function(criteriaCitizenship) {
        for ( i=0; i < criteriaCitizenshipSelectObject.length; i++ ) {
          if ( criteriaCitizenshipSelectObject.options[i].value === criteriaCitizenship ) {
            criteriaCitizenshipSelectObject.options[i].selected = 'selected';
          }
        }
      });
    };
    // Select Year of Need Criteria
    var criteriaYearOfNeed = "<%- scholarshipDetails[0].Criteria_YearOfNeed %>";
    var criteriaYearOfNeedArrTrimmed = criteriaYearOfNeed.split('|').slice(1, -1);
    var criteriaYearOfNeedSelectObject = document.getElementById('criteriaYearOfNeed');
    if ( criteriaYearOfNeedArrTrimmed.length !== 0 ) {
      criteriaYearOfNeedSelectObject.options[0].selected = '';  // Remove the default 'Not Selected' option
      criteriaYearOfNeedArrTrimmed.forEach( function(criteriaYearOfNeed) {
        for ( i=0; i < criteriaYearOfNeedSelectObject.length; i++ ) {
          if ( criteriaYearOfNeedSelectObject.options[i].value === criteriaYearOfNeed ) {
            criteriaYearOfNeedSelectObject.options[i].selected = 'selected';
          }
        }
      });
    };
    // Select Female Applicants Only Criteria
    var criteriaFemaleApplicantsOnly = "<%- scholarshipDetails[0].Criteria_FemaleApplicantsOnly %>";
    var criteriaFemaleApplicantsOnlyArrTrimmed = criteriaFemaleApplicantsOnly.split('|').slice(1, -1);
    var criteriaFemaleApplicantsOnlySelectObject = document.getElementById('criteriaFemaleApplicantsOnly');
    if ( criteriaFemaleApplicantsOnlyArrTrimmed.length !== 0 ) {
      criteriaFemaleApplicantsOnlySelectObject.options[0].selected = '';  // Remove the default 'Not Selected' option
      criteriaFemaleApplicantsOnlyArrTrimmed.forEach( function(criteriaFemaleApplicantsOnly) {
        for ( i=0; i < criteriaFemaleApplicantsOnlySelectObject.length; i++ ) {
          if ( criteriaFemaleApplicantsOnlySelectObject.options[i].value === criteriaFemaleApplicantsOnly ) {
            criteriaFemaleApplicantsOnlySelectObject.options[i].selected = 'selected';
          }
        }
      });
    };
    // Select Enrollment Status Criteria
    var criteriaEnrollmentStatus = "<%- scholarshipDetails[0].Criteria_EnrollmentStatus %>";
    var criteriaEnrollmentStatusArrTrimmed = criteriaEnrollmentStatus.split('|').slice(1, -1);
    var criteriaEnrollmentStatusSelectObject = document.getElementById('criteriaEnrollmentStatus');
    if ( criteriaEnrollmentStatusArrTrimmed.length !== 0 ) {
      criteriaEnrollmentStatusSelectObject.options[0].selected = '';  // Remove the default 'Not Selected' option
      criteriaEnrollmentStatusArrTrimmed.forEach( function(criteriaEnrollmentStatus) {
        for ( i=0; i < criteriaEnrollmentStatusSelectObject.length; i++ ) {
          if ( criteriaEnrollmentStatusSelectObject.options[i].value === criteriaEnrollmentStatus ) {
            criteriaEnrollmentStatusSelectObject.options[i].selected = 'selected';
          }
        }
      });
    };
    document.getElementById('criteriaMinimumGPA').value = "<%= scholarshipDetails[0].Criteria_GPAMinimum %>";
    // Select Military Service Criteria
    var criteriaMilitaryService = "<%- scholarshipDetails[0].Criteria_USMilitaryService %>";
    var criteriaMilitaryServiceArrTrimmed = criteriaMilitaryService.split('|').slice(1, -1);
    var criteriaMilitaryServiceSelectObject = document.getElementById('criteriaMilitaryService');
    if ( criteriaMilitaryServiceArrTrimmed.length !== 0 ) {
      criteriaMilitaryServiceSelectObject.options[0].selected = '';  // Remove the default 'Not Selected' option
      criteriaMilitaryServiceArrTrimmed.forEach( function(criteriaMilitaryService) {
        for ( i=0; i < criteriaMilitaryServiceSelectObject.length; i++ ) {
          if ( criteriaMilitaryServiceSelectObject.options[i].value === criteriaMilitaryService ) {
            criteriaMilitaryServiceSelectObject.options[i].selected = 'selected';
          }
        }
      });
    };
    loadSelectedValues("criteriaMilitaryService", "<%- scholarshipDetails[0].Criteria_USMilitaryService %>");
    loadSelectedValues("criteriaFAAPilotCertificate", "<%- scholarshipDetails[0].Criteria_FAAPilotCertificate %>");
    loadSelectedValues("criteriaFAAPilotRating", "<%- scholarshipDetails[0].Criteria_FAAPilotRating %>");
    loadSelectedValues("criteriaFAAMechanicCertificate", "<%- scholarshipDetails[0].Criteria_FAAMechanicCertificate %>");

    // Disable the controls (and change the instruction) if the user does not have permission to update Scholarships.
    if ( <%- !userCanUpdateScholarship %> ) {
      document.getElementById('scholarshipInstructions').innerText = "Review the entries below.";
      document.getElementById('scholarshipStatus').disabled = true;
      document.getElementById('scholarshipName').disabled = true;
      document.getElementById('scholarshipDescription').disabled = true;
      document.getElementById('scholarshipLink').disabled = true;
      document.getElementById('scholarshipAward').disabled = true;
      document.getElementById('scholarshipContactFName').disabled = true;
      document.getElementById('scholarshipContactLName').disabled = true;
      document.getElementById('scholarshipContactEmail').disabled = true;
      document.getElementById('scholarshipContactTelephone').disabled = true;
      document.getElementById('notesAdmin').disabled = true;
      document.getElementById('scholarshipEligReqsPrimary').disabled = true;
//      document.getElementById('scholarshipEligReqsOther').disabled = true;
      document.getElementById('scholarshipRecurrence').disabled = true;
      document.getElementById('scholarshipApplListDate').disabled = true;
      document.getElementById('scholarshipApplStartDate').disabled = true;
      document.getElementById('scholarshipApplEndDate').disabled = true;
      document.getElementById('criteriaFieldOfStudy').disabled = true;
      document.getElementById('criteriaMinimumAge').disabled = true;
      document.getElementById('criteriaMaximumAge').disabled = true;
      document.getElementById('criteriaCitizenship').disabled = true;
      document.getElementById('criteriaYearOfNeed').disabled = true;
      document.getElementById('criteriaFemaleApplicantsOnly').disabled = true;
      document.getElementById('criteriaEnrollmentStatus').disabled = true;
      document.getElementById('criteriaMinimumGPA').disabled = true;
      document.getElementById('criteriaMilitaryService').disabled = true;
      document.getElementById('criteriaFAAPilotCertificate').disabled = true;
      document.getElementById('criteriaFAAPilotRating').disabled = true;
      document.getElementById('criteriaFAAMechanicCertificate').disabled = true;
    };
  <% } %>


  //////////////////////////////////////////////////////////////////////
  // Validate the data before submitting the form
  //////////////////////////////////////////////////////////////////////
  function validateData() {
    var dataAreValid = true;  // test for errors below

    //////////////////////////////////////////////////
    // Scholarship Status
    //////////////////////////////////////////////////
    var scholarshipStatus = document.getElementById("scholarshipStatus").value;
    var scholarshipStatusErrors = document.getElementById("scholarshipStatusErrors");
    scholarshipStatusErrors.innerText = '';  // reset value
    if ( scholarshipStatus.length === 0 || scholarshipStatus == '0') {
      scholarshipStatusErrors.innerText = "Scholarship Status cannot be blank.";
    };
    if ( scholarshipStatusErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipStatusErrors.style.display = "none";
    } else {
      scholarshipStatusErrors.style.display = "block";
      dataAreValid = false;
    };
 
    //////////////////////////////////////////////////
    // Scholarship Name
    //////////////////////////////////////////////////
    var scholarshipName = document.getElementById("scholarshipName").value;
    var scholarshipNameErrors = document.getElementById("scholarshipNameErrors");
    scholarshipNameErrors.innerText = '';  // reset value
    if ( scholarshipName.length === 0 ) {
      scholarshipNameErrors.innerText = "Scholarship Name cannot be blank.";
    };
    if ( scholarshipNameErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipNameErrors.style.display = "none";
    } else {
      scholarshipNameErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // Scholarship Description
    //////////////////////////////////////////////////
    var scholarshipDescription = document.getElementById("scholarshipDescription").value;
    var scholarshipDescriptionErrors = document.getElementById("scholarshipDescriptionErrors");
    scholarshipDescriptionErrors.innerText = '';  // reset value
    if ( scholarshipDescription.length === 0 ) {
      scholarshipDescriptionErrors.innerText = "Scholarship Description cannot be blank.";
    };
    if ( scholarshipDescriptionErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipDescriptionErrors.style.display = "none";
    } else {
      scholarshipDescriptionErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // Scholarship Link
    //////////////////////////////////////////////////
    var scholarshipLink = document.getElementById("scholarshipLink").value;
    var scholarshipLinkErrors = document.getElementById("scholarshipLinkErrors");
    scholarshipLinkErrors.innerText = '';  // reset value
    if ( scholarshipLink.length === 0 ) {
      scholarshipLinkErrors.innerText = "Scholarship Link cannot be blank.";
    };
    if ( scholarshipLinkErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipLinkErrors.style.display = "none";
    } else {
      scholarshipLinkErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // Scholarship Award
    //////////////////////////////////////////////////
    var scholarshipAward = document.getElementById("scholarshipAward").value;
    var scholarshipAwardErrors = document.getElementById("scholarshipAwardErrors");
    scholarshipAwardErrors.innerText = '';  // reset value
    if ( scholarshipAward.length === 0 ) {
      scholarshipAwardErrors.innerText = "Scholarship Award cannot be blank.";
    };
    if ( scholarshipAwardErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipAwardErrors.style.display = "none";
    } else {
      scholarshipAwardErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // Scholarship Contact First Name
    //////////////////////////////////////////////////
    /*  // Logic removed by KK 5/8/2021
    var scholarshipContactFName = document.getElementById("scholarshipContactFName").value;
    var scholarshipContactFNameErrors = document.getElementById("scholarshipContactFNameErrors");
    scholarshipContactFNameErrors.innerText = '';  // reset value
    if ( scholarshipContactFName.length === 0 ) {
      scholarshipContactFNameErrors.innerText = "Scholarship Contact First Name cannot be blank.";
    };
    if ( scholarshipContactFNameErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipContactFNameErrors.style.display = "none";
    } else {
      scholarshipContactFNameErrors.style.display = "block";
      dataAreValid = false;
    };
    */

    //////////////////////////////////////////////////
    // Scholarship Contact Last Name
    //////////////////////////////////////////////////
    /*  // Logic removed by KK 5/8/2021
    var scholarshipContactLName = document.getElementById("scholarshipContactLName").value;
    var scholarshipContactLNameErrors = document.getElementById("scholarshipContactLNameErrors");
    scholarshipContactLNameErrors.innerText = '';  // reset value
    if ( scholarshipContactLName.length === 0 ) {
      scholarshipContactLNameErrors.innerText = "Scholarship Contact Last Name cannot be blank.";
    };
    if ( scholarshipContactLNameErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipContactLNameErrors.style.display = "none";
    } else {
      scholarshipContactLNameErrors.style.display = "block";
      dataAreValid = false;
    };
    */

    //////////////////////////////////////////////////
    // Scholarship Contact Email
    //////////////////////////////////////////////////
    var scholarshipContactEmail = document.getElementById("scholarshipContactEmail").value;
    var scholarshipContactEmailErrors = document.getElementById("scholarshipContactEmailErrors");
    scholarshipContactEmailErrors.innerText = '';  // reset value
    // Email cannot be blank
    if ( scholarshipContactEmail.length === 0 ) {
      scholarshipContactEmailErrors.innerText += "Scholarship Contact Email cannot be blank. ";
    } else
      // Email must be properly formatted
      if ( !/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/.test(scholarshipContactEmail) ) {
        scholarshipContactEmailErrors.innerText += "Scholarship Contact Email must be a proper email address. ";
      };
    // Were errors found?
    if ( scholarshipContactEmailErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipContactEmailErrors.style.display = "none";
    } else {
      scholarshipContactEmailErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // Scholarship Recurrence Frequency
    //////////////////////////////////////////////////
    var scholarshipRecurrence = document.getElementById("scholarshipRecurrence").value;
    var scholarshipRecurrenceErrors = document.getElementById("scholarshipRecurrenceErrors");
    scholarshipRecurrenceErrors.innerText = '';  // reset value
    if ( scholarshipRecurrence.length === 0 || scholarshipRecurrence == '0') {
      scholarshipRecurrenceErrors.innerText = "Recurrence Frequency cannot be blank.";
    };
    if ( scholarshipRecurrenceErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipRecurrenceErrors.style.display = "none";
    } else {
      scholarshipRecurrenceErrors.style.display = "block";
      dataAreValid = false;
    };
 
    //////////////////////////////////////////////////
    // Application List Date
    //////////////////////////////////////////////////
    var scholarshipApplListDate = document.getElementById("scholarshipApplListDate").value;
    var scholarshipApplListDateErrors = document.getElementById("scholarshipApplListDateErrors");
    scholarshipApplListDateErrors.innerText = '';  // reset value
    var scholarshipApplStartDate = document.getElementById("scholarshipApplStartDate").value;
    var scholarshipApplEndDate = document.getElementById("scholarshipApplEndDate").value;
    // check validation rules
    if ( scholarshipApplListDate.length > 0 ) {
      // if present, must be a valid date
      if ( Date.parse(scholarshipApplListDate) === NaN ) {
        scholarshipApplListDateErrors.innerText += "Application List Date must be a valid date. ";
      };
      // if Start Date also present, List Date must be before Start Date
      if ( scholarshipApplStartDate.length > 0  && scholarshipApplListDate > scholarshipApplStartDate ) {
        scholarshipApplListDateErrors.innerText += "Application List Date must be before the Application Start Date. ";
      };
      // if End Date also present, List Date must be before End Date
      if ( scholarshipApplEndDate.length > 0  && scholarshipApplListDate > scholarshipApplEndDate ) {
        scholarshipApplListDateErrors.innerText += "Application List Date must be before the Application End Date. ";
      };
    } else { // List Date is blank
      // if an End Date is present, either List or Start Date must be present
      if ( scholarshipApplStartDate.length === 0 && scholarshipApplEndDate.length > 0) {
        scholarshipApplListDateErrors.innerText += "Either Application List Date or Application Start Date must be selected when an Application End Date is selected. ";
      };
    };
    // Were errors found?
    if ( scholarshipApplListDateErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipApplListDateErrors.style.display = "none";
    } else {
      scholarshipApplListDateErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // Application Start Date
    //////////////////////////////////////////////////
    var scholarshipApplStartDate = document.getElementById("scholarshipApplStartDate").value;
    var scholarshipApplStartDateErrors = document.getElementById("scholarshipApplStartDateErrors");
    scholarshipApplStartDateErrors.innerText = '';  // reset value
    var scholarshipApplListDate = document.getElementById("scholarshipApplListDate").value;
    var scholarshipApplEndDate = document.getElementById("scholarshipApplEndDate").value;
    // check validation rules
    if ( scholarshipApplStartDate.length > 0 ) {
      // if present, must be a valid date
      if ( Date.parse(scholarshipApplStartDate) === NaN ) {
        scholarshipApplStartDateErrors.innerText += "Application Start Date must be a valid date. ";
      };
      // if End Date also present, Start Date must be before End Date
      if ( scholarshipApplEndDate.length > 0  && scholarshipApplStartDate > scholarshipApplEndDate ) {
        scholarshipApplStartDateErrors.innerText += "Application Start Date must be before the Application End Date. ";
      };
    } else { // Start Date is blank
      // if an End Date is present, either List or Start Date must be present
      if ( scholarshipApplListDate.length === 0 && scholarshipApplEndDate.length > 0) {
        scholarshipApplStartDateErrors.innerText += "Either Application List Date or Application Start Date must be selected when an Application End Date is selected. ";
      };
    };
    // Were errors found?
    if ( scholarshipApplStartDateErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipApplStartDateErrors.style.display = "none";
    } else {
      scholarshipApplStartDateErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // Application End Date
    //////////////////////////////////////////////////
    var scholarshipApplEndDate = document.getElementById("scholarshipApplEndDate").value;
//  alert('ApplEndDate: ' + scholarshipApplEndDate);
    var scholarshipApplEndDateErrors = document.getElementById("scholarshipApplEndDateErrors");
    scholarshipApplEndDateErrors.innerText = '';  // reset value
    // if present, must be a valid date
    if ( scholarshipApplEndDate.length !== 0 && Date.parse(scholarshipApplEndDate) === NaN ) {
//      alert('ApplEndDate is NOT a valid date');
      scholarshipApplEndDateErrors.innerText += "Application End Date must be a valid date. ";
    };
    // End Date cannot be blank if either List Date or Start Date is present
// ToDo
    // Were errors found?
    if ( scholarshipApplEndDateErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      scholarshipApplEndDateErrors.style.display = "none";
    } else {
      scholarshipApplEndDateErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // Criteria - Minimum Age
    //////////////////////////////////////////////////
    var criteriaMinimumAge = document.getElementById('criteriaMinimumAge').value;
    var criteriaMaximumAge = document.getElementById('criteriaMaximumAge').value;
    var criteriaMinimumAgeErrors = document.getElementById('criteriaMinimumAgeErrors');
    criteriaMinimumAgeErrors.innerText = '';  // reset value
    if ( criteriaMinimumAge.length !== 0 ) {
      if ( !(/^\d+$/.test(criteriaMinimumAge)) ) { // not an integer
        criteriaMinimumAgeErrors.innerText += "Minimum Age must be a valid integer. ";
      } else // an integer
        if ( criteriaMinimumAge < 1 || criteriaMinimumAge > 99 ) { // must be between 1 and 99
        criteriaMinimumAgeErrors.innerText += "Minimum Age must be between 1 and 99. ";
      } else {
          if ( criteriaMaximumAge.length !== 0 && /^\d+$/.test(criteriaMaximumAge) ) {
            if ( criteriaMinimumAge > criteriaMaximumAge ) {
              criteriaMinimumAgeErrors.innerText += "Minimum Age must be before Maximum Age. ";
            };
          };
      };
    };
    // Were errors found?
    if ( criteriaMinimumAgeErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      criteriaMinimumAgeErrors.style.display = "none";
    } else {
      criteriaMinimumAgeErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // Criteria - Maximum Age
    //////////////////////////////////////////////////
    var criteriaMaximumAge = document.getElementById('criteriaMaximumAge').value;
    var criteriaMinimumAge = document.getElementById('criteriaMinimumAge').value;
    var criteriaMaximumAgeErrors = document.getElementById('criteriaMaximumAgeErrors');
    criteriaMaximumAgeErrors.innerText = '';  // reset value
    if ( criteriaMaximumAge.length !== 0 ) {
      if ( !(/^\d+$/.test(criteriaMaximumAge)) ) { // not an integer
        criteriaMaximumAgeErrors.innerText += "Maximum Age must be a valid integer. ";
      } else // an integer
        if ( criteriaMaximumAge < 1 || criteriaMaximumAge > 99 ) { // must be between 1 and 99
        criteriaMaximumAgeErrors.innerText += "Maximum Age must be between 1 and 99. ";
      } else {
          if ( criteriaMinimumAge.length !== 0 && /^\d+$/.test(criteriaMinimumAge) ) {
            if ( criteriaMinimumAge > criteriaMaximumAge ) {
              criteriaMaximumAgeErrors.innerText += "Minimum Age must be before Maximum Age. ";
            };
          };
      };
    };
    // Were errors found?
    if ( criteriaMaximumAgeErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      criteriaMaximumAgeErrors.style.display = "none";
    } else {
      criteriaMaximumAgeErrors.style.display = "block";
      dataAreValid = false;
    };

     //////////////////////////////////////////////////
     // Criteria - Citizenship
     //////////////////////////////////////////////////
     var criteriaCitizenship = Array.from(document.getElementById("criteriaCitizenship").selectedOptions).map(v=>v.value);
     var criteriaCitizenshipFormatted = convertOptionsToDelimitedString(criteriaCitizenship, "|", "0");
     var criteriaCitizenshipErrors = document.getElementById("criteriaCitizenshipErrors");
     criteriaCitizenshipErrors.innerText = '';  // reset value
//     if ( criteriaCitizenshipFormatted === '||' ) {
//       criteriaCitizenshipErrors.innerText = "At least one Citizenship Criteria must be selected.";
//     };
     if ( criteriaCitizenshipErrors.innerText.length === 0 ) {  // if no errors, hide the error text
       criteriaCitizenshipErrors.style.display = "none";
     } else {
       criteriaCitizenshipErrors.style.display = "block";
       dataAreValid = false;
     };

    //////////////////////////////////////////////////
    // Criteria - Female Applicants Only
    //////////////////////////////////////////////////
    var criteriaFemaleApplicantsOnly = document.getElementById("criteriaFemaleApplicantsOnly").value;
    var criteriaFemaleApplicantsOnlyErrors = document.getElementById("criteriaFemaleApplicantsOnlyErrors");
    criteriaFemaleApplicantsOnlyErrors.innerText = '';  // reset value
    if ( criteriaFemaleApplicantsOnly.length === 0 || criteriaFemaleApplicantsOnly == '0') {
      criteriaFemaleApplicantsOnlyErrors.innerText = "'Female Applicants Only' cannot be blank.";
    };
    if ( criteriaFemaleApplicantsOnlyErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      criteriaFemaleApplicantsOnlyErrors.style.display = "none";
    } else {
      criteriaFemaleApplicantsOnlyErrors.style.display = "block";
      dataAreValid = false;
    };
 
    //////////////////////////////////////////////////
    // Criteria - Minimum GPA
    //////////////////////////////////////////////////
    var criteriaMinimumGPA = document.getElementById('criteriaMinimumGPA').value;
    criteriaMinimumGPA = criteriaMinimumGPA === "0" ? "0.00" : criteriaMinimumGPA;
    var criteriaMinimumGPAErrors = document.getElementById('criteriaMinimumGPAErrors');
    criteriaMinimumGPAErrors.innerText = '';  // reset value
    if ( criteriaMinimumGPA.length !== 0 ) {
      if ( !(/^[0-4]\.\d\d$/.test(criteriaMinimumGPA)) ) { // not a valid GPA (0.00 - 4.99)
        criteriaMinimumGPAErrors.innerText += "Minimum GPA must be a valid number (0.00 - 4.99). ";
//      } else // a valid GPA
//        if ( criteriaMinimumGPA < 1 || criteriaMinimumAge > 99 ) { // must be between 1 and 99
//        criteriaMinimumAgeErrors.innerText += "Minimum Age must be between 1 and 99. ";
//      } else {
//          if ( criteriaMaximumAge.length !== 0 && /^\d+$/.test(criteriaMaximumAge) ) {
//            if ( criteriaMinimumAge > criteriaMaximumAge ) {
//              criteriaMinimumAgeErrors.innerText += "Minimum Age must be before Maximum Age. ";
//            };
//          };
      };
    };
    // Were errors found?
    if ( criteriaMinimumGPAErrors.innerText.length === 0 ) {  // if no errors, hide the error text
      criteriaMinimumGPAErrors.style.display = "none";
    } else {
      criteriaMinimumGPAErrors.style.display = "block";
      dataAreValid = false;
    };

    //////////////////////////////////////////////////
    // If no errors, add the Scholarship
    //////////////////////////////////////////////////
//    dataAreValid = false;  // force stop during debugging
    return dataAreValid;

  }


  //////////////////////////////////////////////////////////////////////
  // Confirm the user wants to delete this Scholarship, and process accordingly
  //////////////////////////////////////////////////////////////////////
  function deleteScholarship() {
    var answer = confirm('Are you sure you want to delete this Scholarship? (' + document.getElementById('scholarshipIDToDelete').value + ')');
    if (answer !== true) {
      return false;
    };
  };

</script>